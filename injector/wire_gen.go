// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package injector

import (
	"github.com/frchandra/gmcgo/app"
	"github.com/frchandra/gmcgo/app/controller"
	"github.com/frchandra/gmcgo/app/middleware"
	"github.com/frchandra/gmcgo/app/repository"
	"github.com/frchandra/gmcgo/app/service"
	"github.com/frchandra/gmcgo/app/util"
	"github.com/frchandra/gmcgo/config"
	"github.com/frchandra/gmcgo/database"
	"github.com/gin-gonic/gin"
	"github.com/google/wire"
)

// Injectors from injector.go:

func InitializeServer() *gin.Engine {
	appConfig := config.NewAppConfig()
	db := app.NewDatabase(appConfig)
	userRepository := repository.NewUserRepository(db)
	client := app.NewCache(appConfig)
	tokenUtil := util.NewTokenUtil(client, appConfig)
	userService := service.NewUserService(userRepository, tokenUtil)
	userController := controller.NewUserController(userService, tokenUtil)
	userMiddleware := middleware.NewUserMiddleware(tokenUtil)
	reservationRepository := repository.NewReservationRepository(db)
	reservationService := service.NewReservationService(reservationRepository)
	reservationController := controller.NewReservationController(reservationService)
	engine := app.NewRouter(userController, userMiddleware, reservationController)
	return engine
}

func InitializeMigrator() *database.Migrator {
	appConfig := config.NewAppConfig()
	db := app.NewDatabase(appConfig)
	migrator := database.NewMigrator(db)
	return migrator
}

// injector.go:

var UserSet = wire.NewSet(repository.NewUserRepository, service.NewUserService, controller.NewUserController, middleware.NewUserMiddleware)

var ReservationSet = wire.NewSet(repository.NewReservationRepository, service.NewReservationService, controller.NewReservationController)

var UtilSet = wire.NewSet(util.NewTokenUtil)
