version: '3.7'

services:
  db:
    image: 'postgres:15-alpine'
    container_name: gmcgo-db
    ports:
      - "5432:${DB_PORT}"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - gmcgo-network

  cache:
    container_name: gmcgo-cache
    image: redis:7.0-bullseye
    ports:
      - '6379:6379'
    command: redis-server --loglevel warning --requirepass ${REDIS_PASSWORD}
    networks:
      - gmcgo-network

  app:
    container_name: gmcgo-app
    labels:
      - "traefik.http.routers.gmcgo-app.rule=(Host(`gmcgo.localhost`) && PathPrefix(`/api`))"
    build:
      context: .
      dockerfile: ./Dockerfile
    hostname: app
    volumes:
      - ./storage/:/ticketing-gmcgo/storage/
      - ./resource/:/ticketing-gmcgo/resource/
      - ./.env:/ticketing-gmcgo/.env
    read_only: true
    ports:
      - "8080:8080"
    networks:
      - gmcgo-network
    depends_on:
      - db
      - cache
      # - logstash
      - minio
      - proxy
    restart: unless-stopped
    # logging:  #use this if you want sent the container logs (from the stdout) to the logstash service directly
    #   driver: gelf
    #   options:
    #     gelf-address: "udp://localhost:12201"
    #     tag: "application"
    environment: 
      - VAULT_HOST=hashicorp-vault
      - VAULT_PORT=8200
      - VAULT_AUTH=token
      - VAULT_TOKEN=hvs.CAESIGhe_q8PV-0d3EtfP9Dln93d_pkYKp6uBnPccOE0u8L0Gh4KHGh2cy5kaUFEQkZPR21wWGh5bXdXbDF3cGlGdTY
      - VAULT_PATH=gmcgo_be

  minio:
    container_name: gmcgo-minio
    image: minio/minio
    ports:
      - "9000:9000"
      - "9090:9090"
    volumes:
      - minio:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server --console-address ":9090" /data
    networks:
      - gmcgo-network

  proxy:
    image: traefik:v2.9
    command:
      - "--api.insecure=true"
      - "--providers.docker"
    ports:
      - "80:80"
      - "8088:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - gmcgo-network

  vault:
    image: hashicorp/vault:latest
    container_name: hashicorp-vault
    volumes:
      - ./.infra/vault/config:/vault/config
      - ./.infra/vault/file:/vault/file
    ports:
      - 8200:8200
    environment:
      - VAULT_ADDR=http://0.0.0.0:8200
      - VAULT_API_ADDR=http://0.0.0.0:8200
      - VAULT_ADDRESS=http://0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    command: vault server -config=/vault/config/vault.json
    networks:
      - gmcgo-network

networks:
  gmcgo-network:
    driver: bridge

volumes:
  pgdata:
    driver: local
  setup:
  elasticsearch:
  minio: